buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
    }
}

def getBuildNumber() {
    return System.getenv("BUILD_NUMBER") as Integer ?: 1
}
def versionBuild = getBuildNumber()

def versionNameStr = "3.0.0.$versionBuild"

def sourceFile = file('libs/libvlc-3.0.0.aar')
def targetFile = file("build/libvlc-${versionNameStr}.aar")
def targetFileDebug = file("build/outputs/aar/libvlc-debug.aar")
def targetFileRelease = file("build/outputs/aar/libvlc-release.aar")

tasks.whenTaskAdded(new Action<Task>() {
    @Override
    void execute(Task task) {
        if (!task.name.contains('clean')) {
            task.doLast {
                copyFileTo(sourceFile, targetFile)
                copyFileTo(sourceFile, targetFileRelease)
                copyFileTo(sourceFile, targetFileDebug)
//                    file.renameTo(new File(file.getParentFile(), file.getName().replace("release.aar", "${versionNameStr}.aar")))

            }
        }
//        else if (task.name.equals('assembleDebug')) {
//            task.doLast {
////                copyFileTo(sourceFile, targetFile)
//                copyFileTo(sourceFile, targetFileDebug)
////                    file.renameTo(new File(file.getParentFile(), file.getName().replace("release.aar", "${versionNameStr}.aar")))
//
//            }
//        }
    }
})

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
}

group = 'com.zenjoy'
def gitUrl = 'https://github.com/zentertain'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publish = true
//    configurations = ['archives'] //When uploading configuration files
    filesSpec {
        from "build/libvlc-${versionNameStr}.aar"
        into "com/zenjoy/libvlc/${versionNameStr}"
    }
    pkg {
        repo = 'maven'
        name = 'libvlc'
        desc = 'libvlc for zenjoy'
//        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['java', 'android']
        publicDownloadNumbers = true

        version {
            name = "${versionNameStr}"
            vcsTag = "${versionNameStr}"

        }
    }
}

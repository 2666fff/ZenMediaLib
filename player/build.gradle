buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
    }
}

def getBuildNumber() {
    return System.getenv("BUILD_NUMBER") as Integer ?: 1
}
def versionBuild = getBuildNumber()

def versionNameStr = "1.0.1.$versionBuild"

def outputPath = ''

tasks.whenTaskAdded(new Action<Task>() {
    @Override
    void execute(Task task) {
        if (task.name.equals('bundleRelease')) {

            task.doLast {
                java.lang.System.out.println('---------------')
                for (File f : task.outputs.files.files) {
                    java.lang.System.out.println(f.getAbsolutePath())
                    outputPath = f.getAbsolutePath()
                    break
                }
            }
        }else if (task.name.equals('assembleRelease')) {
            task.doLast {
                if (outputPath.length() > 1) {
                    def file = new File(outputPath)
                    copyFileTo(file, new File(file.getParentFile(), file.getName().replace("release.aar", "${versionNameStr}.aar")))
//                    file.renameTo(new File(file.getParentFile(), file.getName().replace("release.aar", "${versionNameStr}.aar")))
                }
            }
        }
    }
})

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode versionBuild
        versionName "${versionNameStr}"
    }
    buildTypes {
        release {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':libvlc')
//    compile 'com.zenjoy:libvlc:3.0.0@aar'
}

group = 'com.zenjoy'
def gitUrl = 'https://github.com/zentertain'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publish = true
//    configurations = ['archives'] //When uploading configuration files
    filesSpec {
        from "build/outputs/aar/player-${versionNameStr}.aar"
        into "com/zenjoy/player/${versionNameStr}"
    }
    pkg {
        repo = 'maven'
        name = 'player'
        desc = 'player for zenjoy'
//        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['java', 'android']
        publicDownloadNumbers = true

        version {
            name = "${versionNameStr}"
            vcsTag = "${versionNameStr}"

        }
    }
}